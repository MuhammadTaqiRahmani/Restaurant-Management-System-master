
{% extends "layout.html" %}
{% block body %}

<link rel="stylesheet" href="static\css\vertical-layout-light\roles.css">
<div class="main-panel">          
  <div class="content-wrapper">
    <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
              <div class="card">
                <div class="card-body">
                  <div class="card">
                    <div class="card-body">
                      <h4 class="card-title">Add Employees</h4>
                      <p class="card-description">Assign and Specify<code>Roles</code>to the <code>Employees</code>for Site Functionality.</p>
                      <div class="container-temp">
                        
                        <div class="template-demo" id="button-id">
                          <button type="button" class="btn btn-social-icon btn-youtube" onclick="openPopup()"><i class="fa-solid fa-user-plus"></i></button>
                        </div>

                        <div class="popup" id="popup">
                          <form method="post" action="/employees"> <!-- Add form element with method and action attributes -->
                              <div class="form-group">
                                  <label for="exampleInputUsername1" id="text">Name</label>
                                  <input type="text" class="form-control" id="exampleInputUsername1" placeholder="Name" name="e_name"> <!-- Add name attribute -->
                                  <label for="exampleInputUsername1" id="text2">Role</label>
                                  <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                    <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                      <select class="js-example-basic-single w-100" id="select" name="role_id">
                                        {% for role in roles %}
                                            <option class="option" value="{{ role.role }}">{{ role.role }}</option>
                                        {% endfor %}
                                    </select>
                                    
                                    
                                  </span>
                                  
                                  
                                  </span>
                                  <div id="buttons">
                                      <button type="submit" class="btn btn-primary mr-2">Save</button>
                                      <button type="button" class="btn btn-inverse-dark btn-fw" onclick="closePopup()">Cancel</button>
                                  </div>
                              </div>
                          </form> <!-- Close form element -->
                      </div>
                      
                        
                        <div class="card-body" id="for-padding">
                          <p class="card-description"><code id="search1">Search</code></p>
                          <div class="template-demo">
                            <div class="input-group mb-2 mr-sm-2">
                              <div class="input-group-prepend">
                                <div class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></div>
                              </div>
                              <input type="text" class="form-control" id="inlineFormInputGroupUsername2" placeholder="Search  here">
                            </div>
                          </div>
                        </div>
                      </div>
                      

                  <!-- Table to display employee data -->
                  <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Role</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for employee in employees %}
                            <tr>
                                <td>{{ employee[0] }}</td>  <!-- s_no -->
                                <td>{{ employee[1] }}</td>  <!-- e_name -->
                                <td>{{ employee[2] }}</td>  <!-- e_role -->
                                <td class="rightmost">
                                  <i class="fa-solid fa-pen-to-square" id="edit" onclick="openEditPopup({{ employee[0] }}, '{{ employee[1] }}', '{{ employee[2] }}')"></i>    &nbsp;  &nbsp; 
                                  <i class="fa-solid fa-trash" id="trash" onclick="deleteEmployee({{ employee[0] }})"></i>   
                              </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>

                </div>
              </div>
            </div>

            <script>
              let = popup = document.getElementByID("popup");
              function openPopup(){
                popup.classList.add("open-popup")
              }
              function closePopup(){
                popup.classList.remove("open-popup")
              }
            </script>


{% endblock %}







@app.route("/delete_role", methods=['POST'])
def delete_role():
    if request.method == 'POST':
        role_id = request.form.get('role_id')

        with session_scope() as db_session:
            role = db_session.query(Roles).filter(Roles.s_no == role_id).first()
            if role:
                db_session.delete(role)
                return '', 204  # No Content status code

    return '', 400  # Bad Request status code



    @app.route("/edit_employee", methods=['POST'])
    def edit_employee():
        if request.method == 'POST':
            emp_id = request.form.get('edit_emp_id')
            new_emp_name = request.form.get('edit_name')
            new_emp_role = request.form.get('edit_role')
    
            with session_scope() as db_session:
                employee = db_session.query(Employees).filter(Employees.s_no == emp_id).first()
                if employee:
                    employee.e_name = new_emp_name  # Corrected attribute name
                    employee.e_role = new_emp_role  # Corrected attribute name
                    db_session.commit()  # Commit the changes to update the existing role
                    return '', 204  # No Content status code
    
        return '', 400  # Bad Request status code

        







        {% extends "layout.html" %}
        {% block body %}
        
        <link rel="stylesheet" href="static\css\vertical-layout-light\roles.css">
        <div class="main-panel">          
          <div class="content-wrapper">
            <div class="row">
                    <div class="col-lg-12 grid-margin stretch-card">
                      <div class="card">
                        <div class="card-body">
                          <div class="card">
                            <div class="card-body">
                              <h4 class="card-title">Add Employees</h4>
                              <p class="card-description">Assign and Specify<code>Roles</code>to the <code>Employees</code>for Site Functionality.</p>
                              <div class="container-temp">
                                
                                <div class="template-demo" id="button-id">
                                  <button type="button" class="btn btn-social-icon btn-youtube" onclick="openPopup()"><i class="fa-solid fa-user-plus"></i></button>
                                </div>
        
                                <div class="popup" id="popup">
                                  <form method="post" action="/employees"> <!-- Add form element with method and action attributes -->
                                      <div class="form-group">
                                          <label for="exampleInputUsername1" id="text">Name</label>
                                          <input type="text" class="form-control" id="exampleInputUsername1" placeholder="Name" name="e_name"> <!-- Add name attribute -->
                                          <label for="exampleInputUsername1" id="text2">Role</label>
                                          <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                            <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                              <select class="js-example-basic-single w-100" id="select" name="role_id">
                                                {% for role in roles %}
                                                    <option class="option" value="{{ role.role }}">{{ role.role }}</option>
                                                {% endfor %}
                                            </select>
                                            </span>
                                          </span>
        
        
                                          <div id="buttons">
                                              <button type="submit" class="btn btn-primary mr-2">Save</button>
                                              <button type="button" class="btn btn-inverse-dark btn-fw" onclick="closePopup()">Cancel</button>
                                          </div>
                                      </div>
                                  </form> <!-- Close form element -->
                              </div>
                              <!--  -->
        
                              <div class="popup" id="edit-popup">
                                <form id="edit-form" method="post">
                                  <div class="form-group">
                                    <label for="exampleInputUsername1" id="text">Employee ID</label>
                                    <input type="text" class="form-control" id="edit-emp-id" name="edit_emp_id" readonly>
                                    <label for="exampleInputUsername1" id="text">Name</label>
                                    <input type="text" class="form-control" id="edit-name" name="edit_name">
                                    <label for="exampleInputUsername1" id="text2">Role</label>
                                          <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                            <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                              <select class="js-example-basic-single w-100" id="edit-role" name="edit_role">
                                                {% for role in roles %}
                                                    <option class="option" value="{{ role.role }}">{{ role.role }}</option>
                                                {% endfor %}
                                            </select>
                                            </span>
                                          </span>
                                    <div class="mt-3">
                                      <button type="submit" class="btn btn-primary">update</button>
                                      <button type="button" class="btn btn-secondary" onclick="closeEditPopup()">Cancel</button>
                                    </div>
                                  </div>
                                </form>
                              </div>
                              
                              <!--  -->
                                
                                <div class="card-body" id="for-padding">
                                  <p class="card-description"><code id="search1">Search</code></p>
                                  <div class="template-demo">
                                    <div class="input-group mb-2 mr-sm-2">
                                      <div class="input-group-prepend">
                                        <div class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></div>
                                      </div>
                                      <input type="text" class="form-control" id="inlineFormInputGroupUsername2" placeholder="Search  here">
                                    </div>
                                  </div>
                                </div>
                              </div>
                              
        
                          <!-- Table to display employee data -->
                          <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Name</th>
                                        <th>Role</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for employee in employees %}
                                    <tr>
                                        <td>{{ employee[0] }}</td>  <!-- s_no -->
                                        <td>{{ employee[1] }}</td>  <!-- e_name -->
                                        <td>{{ employee[2] }}</td>  <!-- e_role -->
                                        <td class="rightmost">
                                          <i class="fa-solid fa-pen-to-square" id="edit" onclick="openEditPopup({{ employee[0] }}, '{{ employee[1] }}', '{{ employee[2] }}')"></i>&nbsp;&nbsp; 
                                          <i class="fa-solid fa-trash" id="trash" onclick="deleteEmployee({{ employee[0] }})"></i>      
                                      </td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
        
                        </div>
                      </div>
                    </div>
        
                    <script>
                      let popup = document.getElementById("popup");
                      let editPopup = document.getElementById("edit-popup");
                      let editForm = document.getElementById("edit-form");
                      let editEmpIdField = document.getElementById("edit-emp-id");
                      let editNameField = document.getElementById("edit-name");
                      let editRoleField = document.getElementById("edit-role");
            
                      function openPopup() {
                        popup.classList.add("open-popup");
                      }
            
                      function closePopup() {
                        popup.classList.remove("open-popup");
                      }
            
                      function openEditPopup(empId, empName, empRole) {
                        editEmpIdField.value = empId;
                        editNameField.value = empName;
                        editRoleField.value = empRole;
                        editPopup.classList.add("open-popup");
                      }
            
                      function closeEditPopup() {
                        editPopup.classList.remove("open-popup");
                      }
            
                      function deleteEmployee(empId) {
                        if (confirm("Are you sure you want to delete this employee?")) {
                          fetch('/delete_employee', {
                            method: 'POST',
                            headers: {
                              'Content-Type': 'application/x-www-form-urlencoded'
                            },
                            body: 'emp_id=' + encodeURIComponent(empId)
                          }).then(response => {
                            if (response.ok) {
                              location.reload();
                            }
                          });
                        }
                      }
            
                      editForm.addEventListener('submit', function(event) {
                        event.preventDefault();
                        let empId = editEmpIdField.value;
                        let newEmpName = editNameField.value;
                        let newEmpRole = editRoleField.value;
            
                        fetch('/edit_employee', {
                          method: 'POST',
                          headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                          },
                          body: 'edit_emp_id=' + encodeURIComponent(empId) + '&edit_name=' + encodeURIComponent(newEmpName) + '&edit_role=' + encodeURIComponent(newEmpRole)
                        }).then(response => {
                          if (response.ok) {
                            location.reload();
                          }
                        });
                      });
            
                      function searchTable() {
                        var input, filter, table, tr, td, i, txtValue;
                        input = document.getElementById("searchInput");
                        filter = input.value.toUpperCase();
                        table = document.querySelector(".table");
                        tr = table.getElementsByTagName("tr");
            
                        for (i = 0; i < tr.length; i++) {
                          td = tr[i].getElementsByTagName("td")[1];
                          if (td) {
                            txtValue = td.textContent || td.innerText;
                            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                              tr[i].style.display = "";
                            } else {
                              tr[i].style.display = "none";
                            }
                          }
                        }
                      }
                    </script>
        
        
        {% endblock %}

        


        @app.route("/edit_employee", methods=['POST'])
def edit_employee():
    if request.method == 'POST':
        emp_id = request.form.get('edit_emp_id')
        new_emp_name = request.form.get('edit_name')
        new_emp_role = request.form.get('edit_role')

        with session_scope() as db_session:
            employee = db_session.query(Employees).filter(Employees.s_no == emp_id).first()
            if employee:
                employee.e_name = new_emp_name  # Corrected attribute name
                employee.e_role = new_emp_role  # Corrected attribute name
                db_session.commit()  # Commit the changes to update the existing role
                return '', 204  # Indicate success with no content
            else:
                return 'Employee not found', 404  # Indicate failure if employee is not found

# Ensure other routes like add_employee and delete_employee are correctly implemented as well


@app.route("/delete_employee", methods=['POST'])
def delete_employee():
    if request.method == 'POST':
        emp_id = request.form.get('emp_id')

        with session_scope() as db_session:
            employee = db_session.query(Employees).filter(Employees.s_no == emp_id).first()
            if employee:
                db_session.delete(employee)
                return '', 204  # No Content status code

    return '', 400  # Bad Request status code