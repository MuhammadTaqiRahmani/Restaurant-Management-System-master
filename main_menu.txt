@app.route("/menu/update/<int:item_id>", methods=['POST'])
def update_menu_item(item_id):
    item_name = request.form.get('edit_item_name')
    item_price = request.form.get('edit_price')
    cat_id = request.form.get('edit_cat_id')
    status = request.form.get('edit_status')

    with session_scope() as db_session:
        menu_item = db_session.query(Menu).filter(Menu.s_no == item_id).first()
        if menu_item:
            category_obj = db_session.query(Category).filter(Category.s_no == cat_id).first()
            if category_obj:
                category_name = category_obj.cat
                menu_item.item = item_name
                menu_item.price = item_price
                menu_item.category = category_name
                menu_item.status = status
                db_session.add(menu_item)
                return jsonify({
                    'status': 'success',
                    'message': 'Menu item updated successfully',
                    'item': {
                        'id': item_id,
                        'item': item_name,
                        'price': item_price,
                        'category': category_name,
                        'status': status
                    }
                })
        return jsonify({'status': 'error', 'message': 'Item not found'})






{% extends "layout.html" %}
{% block body %}

<link rel="stylesheet" href="static\css\vertical-layout-light\roles.css">
<div class="main-panel">          
  <div class="content-wrapper">
    <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
              <div class="card">
                <div class="card-body">
                  <div class="card">
                    <div class="card-body">
                      <h4 class="card-title">Add Items</h4>
                      <p class="card-description">Specify<code>Items</code>with details including<code> status</code>for Site Functionality.</p>
                      <div class="container-temp">
                        
                        <div class="template-demo" id="button-id">
                          <button type="button" class="btn btn-social-icon btn-youtube" onclick="openPopup()"><i class="fa-solid fa-plus" id="plus1"></i></button>
                        </div>

                        <div class="popup" id="popup">
                          <form method="post" action="/menu">
                            <div class="form-group">
                              <label for="exampleInputUsername1" id="text">Item</label>
                              <input type="text" class="form-control" id="exampleInputUsername1" placeholder="Add Item" name="item">

                              <label for="exampleInputUsername1" id="text2">Price</label>
                              <input type="text" class="form-control" id="exampleInputUsername1" placeholder="Add Price" name="price">

                              <label for="exampleInputUsername1" id="text2">Category</label>
                              <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                <select class="js-example-basic-single w-100" id="select" name="cat_id">
                                  {% for category in categories %}
                                      <option class="option" value="{{ category.s_no }}">{{ category.cat }}</option>
                                  {% endfor %}
                                </select>
                              </select>

                                <label for="exampleInputUsername1" id="text2">Status</label>
                                <span class="select2 select2-container select2-container--default select2-container--below" id="#myTextField">
                                  <select class="js-example-basic-single w-100" id="select" name="status">
                                    <option class="option" value="Available">Available</option>
                                    <option class="option" value="Unavailable">Unavailable</option>
                                  </select>

                          </span>

                              <div id="buttons">
                                <button type="submit" class="btn btn-primary mr-2">Save</button>
                                <button type="button" class="btn btn-inverse-dark btn-fw" onclick="closePopup()">Cancel</button>
                              </div>

                            </div>
                          </form>
                        </div>

                        <div class="popup" id="edit-popup">
                          <form id="edit-form" method="post">
                            <div class="form-group">
                              <label for="edit-item-id" id="text">Item ID</label>
                              <input type="text" class="form-control" id="edit-item-id" name="edit_item_id" readonly>
                              <label for="edit-item" id="text">Item Name</label>
                              <input type="text" class="form-control" id="edit-item" name="edit_item_name">
                              <label for="edit-price" id="text2">Price</label>
                              <input type="text" class="form-control" id="edit-price" name="edit_price">
                              <label for="edit-cat-id" id="text2">Category</label>
                              <select class="form-control" id="edit-cat-id" name="edit_cat_id">
                                {% for category in categories %}
                                  <option value="{{ category.s_no }}">{{ category.cat }}</option>
                                {% endfor %}
                              </select>
                              <label for="edit-status" id="text2">Status</label>
                              <select class="form-control" id="edit-status" name="edit_status">
                                <option value="Available">Available</option>
                                <option value="Unavailable">Unavailable</option>
                              </select>
                              <div class="mt-3">
                                <button type="submit" class="btn btn-primary">Update</button>
                                <button type="button" class="btn btn-secondary" onclick="closeEditPopup()">Cancel</button>
                              </div>
                            </div>
                          </form>
                        </div>
                        
                        
                        <div class="card-body" id="for-padding">
                          <p class="card-description"><code id="search1">Search</code></p>
                          <div class="template-demo">
                            <div class="input-group mb-2 mr-sm-2">
                              <div class="input-group-prepend">
                                <div class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></div>
                              </div>
                              <input type="text" class="form-control" id="inlineFormInputGroupUsername2" placeholder="Search  here">
                            </div>
                          </div>
                        </div>
                      </div>
                      

                      <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Item</th>
                                    <th>Price</th>
                                    <th>Category</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for item in items %}
                                <tr data-item-id="{{ item[0] }}">
                                    <td>{{ item[0] }}</td>  <!-- s_no -->
                                    <td>{{ item[1] }}</td>  <!-- item -->
                                    <td>{{ item[2] }}</td>  <!-- price -->
                                    <td>{{ item[3] }}</td>  <!-- category -->
                                    <td>
                                      {% if item[4] == 'Available' %}
                                      <label class="badge badge-success">Available</label>
                                      {% else %}
                                      <label class="badge badge-danger">Unavailable</label>
                                      {% endif %}
                                    </td>
                                    <td class="rightmost">
                                      <i class="fa-solid fa-pen-to-square" id="edit" onclick="openEditPopup({{ item[0] }}, '{{ item[1] }}', '{{ item[2] }}', '{{ item[3] }}', '{{ item[4] }}')"></i>
                                      &nbsp; &nbsp;
                                      <i class="fa-solid fa-trash delete-icon" id="trash-{{ item[0] }}" onclick="deleteMenuItem({{ item[0] }})"></i>
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
              </div>
            </div>

            <script>
              let editPopup = document.getElementById("edit-popup");
              let editForm = document.getElementById("edit-form");
              let editItemIdField = document.getElementById("edit-item-id");
              let editItemField = document.getElementById("edit-item");
              let editPriceField = document.getElementById("edit-price");
              let editCatIdField = document.getElementById("edit-cat-id");
              let editStatusField = document.getElementById("edit-status");

                function openPopup() {
                  popup.classList.add("open-popup");
                }

                function closePopup() {
                  popup.classList.remove("open-popup");
                }

                function openEditPopup(itemId, itemName, itemPrice, itemCategory, itemStatus) {
                  editItemIdField.value = itemId;
                  editItemField.value = itemName;
                  editPriceField.value = itemPrice;
                
                  // Set the correct category name in the dropdown
                  for (let i = 0; i < editCatIdField.options.length; i++) {
                    if (editCatIdField.options[i].text === itemCategory) {
                      editCatIdField.selectedIndex = i;
                      break;
                    }
                  }
                
                  editStatusField.value = itemStatus;
                  editPopup.classList.add("open-popup");
                }
                

                function closeEditPopup() {
                  editPopup.classList.remove("open-popup");
                }

                function deleteMenuItem(itemId) {
                  if (confirm('Are you sure you want to delete this menu item?')) {
                    fetch(`/menu/delete/${itemId}`, {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json'
                      }
                    })
                    .then(response => response.json())
                    .then(data => {
                      if (data.status === 'success') {
                        const row = document.querySelector(`#trash-${itemId}`).parentNode.parentNode; // Select the parent <tr> of the delete button
                        if (row) {
                          row.remove();
                        }
                        alert(data.message);
                      } else {
                        alert('Failed to delete menu item');
                      }
                    })
                    .catch(error => console.error('Error:', error));
                  }
                }

                editForm.onsubmit = function(event) {
                  event.preventDefault();
                  let formData = new FormData(editForm);
                  let itemId = editItemIdField.value;
      
                  fetch(`/menu/update/${itemId}`, {
                    method: 'POST',
                    body: formData
                  })
                  .then(response => response.json())
                  .then(data => {
                    if (data.status === 'success') {
                      alert(data.message);
                      
                      // Update the table row with new data
                      let row = document.querySelector(`tr[data-item-id='${itemId}']`);
                      row.children[1].textContent = data.item.item;  // Update item name
                      row.children[2].textContent = data.item.price;  // Update price
                      row.children[3].textContent = data.item.category;  // Update category
                      row.children[4].innerHTML = data.item.status === 'Available' ? '<label class="badge badge-success">Available</label>' : '<label class="badge badge-danger">Unavailable</label>';
      
                      closeEditPopup(); // Close the popup after successful update
                    } else {
                      alert('Failed to update the menu item');
                    }
                  })
                  .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to update the menu item');
                  });
                };

              </script>


{% endblock %}






































                editForm.onsubmit = function(event) {
                  event.preventDefault();
                  let formData = new FormData(editForm);
                  let itemId = editItemIdField.value;
      
                  fetch(`/menu/update/${itemId}`, {
                    method: 'POST',
                    body: formData
                  })
                  .then(response => response.json())
                  .then(data => {
                    if (data.status === 'success') {
                      alert(data.message);
                      
                      // Update the table row with new data
                      let row = document.querySelector(`tr[data-item-id='${itemId}']`);
                      row.children[1].textContent = data.item.item;  // Update item name
                      row.children[2].textContent = data.item.price;  // Update price
                      row.children[3].textContent = data.item.category;  // Update category
                      row.children[4].innerHTML = data.item.status === 'Available' ? '<label class="badge badge-success">Available</label>' : '<label class="badge badge-danger">Unavailable</label>';
      
                      closeEditPopup(); // Close the popup after successful update
                    } else {
                      alert('Failed to update the menu item');
                    }
                  })
                  .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to update the menu item');
                  });
                };